
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>/WEB-INF/jdbc.properties</value>
		</property>
    </bean>
    
   <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        p:location="/WEB-INF/jdbc.properties" /> 

	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.databaseurl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean> -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.databaseurl}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		
		<property name="minPoolSize" value="150"/>
		<property name="maxPoolSize" value="200"/>
		<property name="maxStatements" value="50"/>
		
		
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="mappingResources">
			<list>
				<value>orm/Users.hbm.xml</value>
				<value>orm/UserRoles.hbm.xml</value>
				<value>orm/LatestNews.hbm.xml</value>
			</list>
		</property> -->
		
		<property name="annotatedClasses">
			<list>
				<!-- <value>com.console.users.model.User</value>
				<value>com.console.users.model.UserRole</value> -->
				<value>com.jcg.examples.model.LatestNews</value>
				<value>com.jcg.examples.model.TopNews</value>
				<!-- <value>com.console.users.model.MostRead</value>
				<value>com.console.users.model.Sectors</value>
				<value>com.console.users.model.GainersLosers</value>
				<value>com.console.users.model.WorldData</value>
				<value>com.console.users.model.Subscription</value> -->
			</list>
     	</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				
			</props>
		</property>
	</bean>

	<!-- <bean id="userDao" class="com.console.users.dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="myUserDetailsService" class="com.console.users.service.MyUserDetailsService">
		<property name="userDao" ref="userDao" />
	</bean> -->
	
	<bean id="latestNewsDao" class="com.jcg.examples.dao.LatestNewsDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="LatestNewsDaoService" class="com.jcg.examples.services.LatestNewsDaoService">
		<property name="latestNewsDao" ref="latestNewsDao" />
	</bean>
	
	<bean id="topNewsDao" class="com.jcg.examples.dao.TopNewsDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="TopNewsDaoService" class="com.jcg.examples.services.TopNewsDaoService">
		<property name="topNewsDao" ref="topNewsDao" />
	</bean>
	
	<!-- <bean id="mostReadDao" class="com.console.users.dao.MostReadDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="mostReadDaoService" class="com.console.users.service.MostReadDaoService">
		<property name="mostReadDao" ref="mostReadDao" />
	</bean>
	
	<bean id="sectorsDao" class="com.console.users.dao.SectorsDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="sectorsDaoService" class="com.console.users.service.SectorsDaoService">
		<property name="sectorsDao" ref="sectorsDao" />
	</bean>
    
    
    <bean id="gainerLosersDao" class="com.console.users.dao.GainerLosersDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="gainerLosersDaoService" class="com.console.users.service.GainerLosersDaoService">
		<property name="gainerLosersDao" ref="gainerLosersDao" />
	</bean>
	
	<bean id="WorldDataDao" class="com.console.users.dao.WorldDataDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="WorldDataDaoService" class="com.console.users.service.WorldDataDaoService">
		<property name="WorldDataDao" ref="WorldDataDao" />
	</bean>
	
	<bean id="subscriptionDao" class="com.console.users.dao.SubscriptionDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	<property name="triggers">
		<list>
			<ref bean="birthdayWisherCronTrigger" />
		</list>
	</property>
	</bean>
	
	<bean id="birthdayWisherCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="birthdayWisherJob" />
		run every morning at 6 AM
		<property name="cronExpression" value="0/5 * * * * ?" />
	</bean>

	<bean name="birthdayWisherJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.sivalabs.reminders.BirthdayWisherJob" />
		<property name="jobDataAsMap">
			<map>
				<entry key="emailService" value-ref="emailService"></entry>
			</map>
		</property>
	</bean>

	<bean id="emailService" class="com.sivalabs.reminders.EmailService">
		<property name="mailSender" ref="mailSender"></property>
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="465" />
		<property name="protocol" value="smtps" />
		<property name="username" value="amar1.balla@gmail.com" />
		<property name="password" value="malleshsivas" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtps.auth">true</prop>
				<prop key="mail.smtps.starttls.enable">true</prop>
				<prop key="mail.smtps.debug">true</prop>
			</props>
		</property>
	</bean> -->
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
   
  <!--  <bean id="myAuthenticationSuccessHandler"
		class="com.console.users.service.MySimpleUrlAuthenticationSuccessHandler">
	</bean> -->

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="REQUIRED" rollback-for="Exception" no-rollback-for="IOException"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="userServicePointCut"
			expression="execution(* com.jcg.examples.services.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut" />
	</aop:config>


</beans>
